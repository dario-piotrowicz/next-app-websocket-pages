import Head from 'next/head'
import { ChangeEvent, useEffect, useRef, useState } from 'react';

export const config = { runtime: 'experimental-edge' };

export default function Home() {

  const websocket = useRef<WebSocket|null>(null);

  const [message, setMessage] = useState<string>('');

  const [socketResponses, setSocketResponses] = useState<string[]>([]);

  const addSocketResponse = (response: string) => setSocketResponses(responses => [...responses, response]);

  useEffect(() => {
    // Note: building the URL manually since we need to use the WebSocket constructor and specify the whole wss URL,
    //       we should be able to just do fetch(`/api/socket`, { headers: { Upgrade: 'websocket' } }) instead but
    //       for some reason that is not working (is Next.js stripping the Upgrade header from the request?) 
    const base = new URL(window.location.origin).host;
    const url = `wss://${base}/api/socket`;

    websocket.current = new WebSocket(url);

    const listener = (event: MessageEvent) => addSocketResponse(event.data);
    websocket.current.addEventListener('message', listener);

    return () => websocket.current!.removeEventListener('message', listener);
  }, []);

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
          <label htmlFor='message-to-send'>Message to send:{' '}</label>
          <input id="message-to-send" onChange={(event: any) => setMessage(event.target.value)} value={message}></input>
          <button
            disabled={!message} onClick={() => {
            websocket.current?.send(message);
              setMessage('');
            }}
          >Send</button>
          
          <hr />
          
          <p>Responses from websocket:</p>
          <ul>
            {
              socketResponses.map(response => <li key={response}>{response}</li>)
            }
          </ul>
      </main>
    </>
  )
}
